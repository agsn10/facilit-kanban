server:
  port: 8043
  reactive:
    session:
      # Sessoes consomem memoria no WebFlux. Mantenha baixo ou disable se a API for stateless.
      timeout: 0m #5m
  netty:
    # O tuning ideal depende de nucleos disponoveis.
    # worker-count = nucleos * 2 costuma ser uma boa referencia.
    worker-count: 16
    select-count: 4   # 8 pode ser overkill em muitos ambientes
    connection-timeout: 20000
  ssl:
    enabled: true
    key-store: classpath:facilit.p12
    key-store-password: 123456
    key-store-type: PKCS12
    key-alias: facilit
  http2:
    enabled: true
  compression:
    enabled: true
    mime-types: >
      text/html,text/xml,text/plain,text/css,text/javascript,
      application/javascript,application/json,application/problem+json
    min-response-size: 1024


reactor:
  netty:
    ioWorkerCount: 16
    ioSelectCount: 4
    ioPool:
      leasingStrategy: elastic
    ioBufferSize: 65536 # OK se lida com payloads grandes


management:
  observations:
    annotations:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus, info, env, httptrace, observability
  metrics:
    enable:
      all: true
  endpoint:
    prometheus:
      enabled: true
    health:
      show-details: always
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  tracing:
    enabled: true
    sampling:
      probability: 1.0 # 100% de amostragem (ajuste em prod)
  otlp:
    metrics:
      export:
        enabled: true
        step: 30s
        batch-size: 10000
        url: http://localhost:4318/v1/metrics
    tracing:
      export:
        enabled: true
        compression: gzip
        timeout: 10s
        url: http://localhost:4318/v1/traces

spring:
  reactor:
    netty:
      http:
        server:
          accessLogEnabled: true
  application:
    name: facilit-kanban
  main:
    web-application-type: reactive
  jmx:
    enable: false
  datasource:
    # Usado apenas se houver alguma dependencia acidental do JDBC (Flyway). Pode remover se nao usar nada bloqueante.
    url: jdbc:postgresql://localhost:5432/facilit-kanban
    username: facilit
    password: password
    driver-class-name: org.postgresql.Driver
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/facilit-kanban
    username: facilit
    password: password
    pool:
      enabled: true
      initial-size: 10
      max-size: 40
      # Se o banco aceita bursts, este valor sobe bem a resiliencia
      max-idle-time: 30m
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
  flyway:
    create-schemas: true
    baseline-on-migrate: true
    enabled: true
    url: jdbc:postgresql://localhost:5432/facilit-kanban
    user: facilit
    password: password
    driver-class-name: org.postgresql.Driver
# Garante que o controle do Flyway possa comecar em um banco ja existente
#    baseline-on-migrate: true
# Garante que as migrations nao foram alteradas apos aplicadas
#    validate-on-migrate: true
# Garante que migrations fora de ordem nao sejam aplicadas
    out-of-order: false
    locations: classpath:db/migration  # Caminho para as migrations do Flyway

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    operationsSorter: method
    try-it-out-enabled: true
    syntaxHighlight:
      activated: true
  api-docs:
    path: /v3/api-docs

logging:
  pattern:
    level: "%5p [${spring.application.name:},traceId=%X{traceId:-},spanId=%X{spanId:-}]"
  file:
    name: facilit-kanban.log
    path: /logs
  level:
    # omitir o erro: javax.net.ssl.SSLHandshakeException: Received fatal alert: certificate_unknown
    io.netty.handler.ssl.ApplicationProtocolNegotiationHandler: ERROR
    io.netty.handler.ssl.SslHandler: ERROR
    reactor.netty: ERROR

    # Níveis de logs (descomentando conforme necessário)
    # level:
    #   io:
    #     r2dbc:
    #       proxy: off
    #       core: off
    #   com:
    #     agrosmart:
    #       api: debug
    #   org:
    #     springframework: info
    #     springframework.web: off
    #     springframework.security: off
    #     springframework.r2dbc:
    #       core: off
    #   reactor:
    #     netty: off

    # Debugar mais facilmente fluxos reativos
    # reactor:
    #   debug-agent:
    #     enabled: false
