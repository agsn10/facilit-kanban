<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

    <!-- Variáveis para facilitar customização -->
    <property name="LOG_PATH" value="logs" />
    <property name="APP_NAME" value="facilit-kanban" />
    <property name="MAX_FILE_SIZE" value="50MB" />
    <property name="MAX_HISTORY" value="30" />

    <!-- Padrão de log com MDC (traceId, spanId, user, etc) -->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg | traceId=%X{traceId} %n" />

    <!-- ========== Console ========== -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- ========== Arquivo Principal (INFO+) ========== -->
    <appender name="FILE_APP" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${APP_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${APP_NAME}.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>

            <!-- Roda arquivo também por tamanho -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- ========== Arquivo apenas de ERROR ========== -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${APP_NAME}-error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${APP_NAME}-error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- ========== Logs de acesso HTTP (Spring WebFlux / Tomcat / Netty) ========== -->
    <appender name="ACCESS_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/access.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/access.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date "%requestURL" %statusCode %responseTime ms %n</pattern>
        </encoder>
    </appender>

    <!-- Logs de acesso (usado pelo Netty access log ou Tomcat AccessLogValve) -->
    <logger name="reactor.netty.http.server.AccessLog" level="INFO" additivity="false">
        <appender-ref ref="ACCESS_LOG"/>
    </logger>

    <!-- ========== Async para não travar threads de I/O ========== -->
    <appender name="ASYNC_APP" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE_APP" />
        <queueSize>50000</queueSize>
        <discardingThreshold>0</discardingThreshold>
    </appender>

    <appender name="ASYNC_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE_ERROR" />
    </appender>

    <!-- ====== Níveis de Log por pacote ====== -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.hibernate" level="WARN"/>
    <logger name="reactor" level="WARN"/>
    <logger name="br.com.facilit.kanban" level="INFO"/>
    <logger name="io.r2dbc" level="INFO"/>

    <!-- Raiz: envia para Console + assíncronos -->
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="ASYNC_APP" />
        <appender-ref ref="ASYNC_ERROR" />
    </root>

</configuration>